// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operation_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "operation_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace operation_msg {

namespace {

const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Operation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Operation_reflection_ = NULL;
const ::google::protobuf::Descriptor* Operation_Init_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Operation_Init_reflection_ = NULL;
const ::google::protobuf::Descriptor* Operation_TransactionBegin_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Operation_TransactionBegin_reflection_ = NULL;
const ::google::protobuf::Descriptor* Operation_TransactionEnd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Operation_TransactionEnd_reflection_ = NULL;
const ::google::protobuf::Descriptor* Operation_NoticeError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Operation_NoticeError_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Operation_OperationType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_operation_5fmsg_2eproto() {
  protobuf_AddDesc_operation_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "operation_msg.proto");
  GOOGLE_CHECK(file != NULL);
  Response_descriptor_ = file->message_type(0);
  static const int Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, transaction_id_),
  };
  Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response));
  Operation_descriptor_ = file->message_type(1);
  static const int Operation_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, init_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, transaction_begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, transaction_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, notice_error_),
  };
  Operation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Operation_descriptor_,
      Operation::default_instance_,
      Operation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Operation));
  Operation_Init_descriptor_ = Operation_descriptor_->nested_type(0);
  static const int Operation_Init_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, license_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, app_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, language_version_),
  };
  Operation_Init_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Operation_Init_descriptor_,
      Operation_Init::default_instance_,
      Operation_Init_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_Init, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Operation_Init));
  Operation_TransactionBegin_descriptor_ = Operation_descriptor_->nested_type(1);
  static const int Operation_TransactionBegin_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionBegin, name_),
  };
  Operation_TransactionBegin_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Operation_TransactionBegin_descriptor_,
      Operation_TransactionBegin::default_instance_,
      Operation_TransactionBegin_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionBegin, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionBegin, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Operation_TransactionBegin));
  Operation_TransactionEnd_descriptor_ = Operation_descriptor_->nested_type(2);
  static const int Operation_TransactionEnd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionEnd, transaction_id_),
  };
  Operation_TransactionEnd_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Operation_TransactionEnd_descriptor_,
      Operation_TransactionEnd::default_instance_,
      Operation_TransactionEnd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionEnd, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_TransactionEnd, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Operation_TransactionEnd));
  Operation_NoticeError_descriptor_ = Operation_descriptor_->nested_type(3);
  static const int Operation_NoticeError_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, transaction_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, exception_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, error_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, stack_trace_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, stack_frame_delimiter_),
  };
  Operation_NoticeError_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Operation_NoticeError_descriptor_,
      Operation_NoticeError::default_instance_,
      Operation_NoticeError_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Operation_NoticeError, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Operation_NoticeError));
  Operation_OperationType_descriptor_ = Operation_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_operation_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Operation_descriptor_, &Operation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Operation_Init_descriptor_, &Operation_Init::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Operation_TransactionBegin_descriptor_, &Operation_TransactionBegin::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Operation_TransactionEnd_descriptor_, &Operation_TransactionEnd::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Operation_NoticeError_descriptor_, &Operation_NoticeError::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_operation_5fmsg_2eproto() {
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Operation::default_instance_;
  delete Operation_reflection_;
  delete Operation_Init::default_instance_;
  delete Operation_Init_reflection_;
  delete Operation_TransactionBegin::default_instance_;
  delete Operation_TransactionBegin_reflection_;
  delete Operation_TransactionEnd::default_instance_;
  delete Operation_TransactionEnd_reflection_;
  delete Operation_NoticeError::default_instance_;
  delete Operation_NoticeError_reflection_;
}

void protobuf_AddDesc_operation_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023operation_msg.proto\022\roperation_msg\"\?\n\010"
    "Response\022\r\n\005error\030\001 \002(\010\022\014\n\004code\030\002 \002(\005\022\026\n"
    "\016transaction_id\030\003 \001(\004\"\305\005\n\tOperation\0224\n\004t"
    "ype\030\001 \002(\0162&.operation_msg.Operation.Oper"
    "ationType\022+\n\004init\030\002 \001(\0132\035.operation_msg."
    "Operation.Init\022D\n\021transaction_begin\030\003 \001("
    "\0132).operation_msg.Operation.TransactionB"
    "egin\022@\n\017transaction_end\030\004 \001(\0132\'.operatio"
    "n_msg.Operation.TransactionEnd\022:\n\014notice"
    "_error\030\005 \001(\0132$.operation_msg.Operation.N"
    "oticeError\032U\n\004Init\022\017\n\007license\030\001 \002(\t\022\020\n\010a"
    "pp_name\030\002 \002(\t\022\020\n\010language\030\003 \002(\t\022\030\n\020langu"
    "age_version\030\004 \002(\t\032 \n\020TransactionBegin\022\014\n"
    "\004name\030\001 \002(\t\032(\n\016TransactionEnd\022\026\n\016transac"
    "tion_id\030\001 \002(\004\032\210\001\n\013NoticeError\022\026\n\016transac"
    "tion_id\030\001 \002(\004\022\026\n\016exception_type\030\002 \002(\t\022\025\n"
    "\rerror_message\030\003 \002(\t\022\023\n\013stack_trace\030\004 \002("
    "\t\022\035\n\025stack_frame_delimiter\030\005 \002(\t\"c\n\rOper"
    "ationType\022\010\n\004INIT\020\001\022\025\n\021TRANSACTION_BEGIN"
    "\020\002\022\023\n\017TRANSACTION_END\020\003\022\034\n\030TRANSACTION_N"
    "OTICE_ERROR\020\004", 813);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "operation_msg.proto", &protobuf_RegisterTypes);
  Response::default_instance_ = new Response();
  Operation::default_instance_ = new Operation();
  Operation_Init::default_instance_ = new Operation_Init();
  Operation_TransactionBegin::default_instance_ = new Operation_TransactionBegin();
  Operation_TransactionEnd::default_instance_ = new Operation_TransactionEnd();
  Operation_NoticeError::default_instance_ = new Operation_NoticeError();
  Response::default_instance_->InitAsDefaultInstance();
  Operation::default_instance_->InitAsDefaultInstance();
  Operation_Init::default_instance_->InitAsDefaultInstance();
  Operation_TransactionBegin::default_instance_->InitAsDefaultInstance();
  Operation_TransactionEnd::default_instance_->InitAsDefaultInstance();
  Operation_NoticeError::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_operation_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_operation_5fmsg_2eproto {
  StaticDescriptorInitializer_operation_5fmsg_2eproto() {
    protobuf_AddDesc_operation_5fmsg_2eproto();
  }
} static_descriptor_initializer_operation_5fmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Response::kErrorFieldNumber;
const int Response::kCodeFieldNumber;
const int Response::kTransactionIdFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Response)
}

void Response::InitAsDefaultInstance() {
}

Response::Response(const Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  error_ = false;
  code_ = 0;
  transaction_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:operation_msg.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New() const {
  return new Response;
}

void Response::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Response*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(error_, transaction_id_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool error = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_code;
        break;
      }

      // required int32 code = 2;
      case 2: {
        if (tag == 16) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_transaction_id;
        break;
      }

      // optional uint64 transaction_id = 3;
      case 3: {
        if (tag == 24) {
         parse_transaction_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transaction_id_)));
          set_has_transaction_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Response)
  // required bool error = 1;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->error(), output);
  }

  // required int32 code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->code(), output);
  }

  // optional uint64 transaction_id = 3;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->transaction_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Response)
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Response)
  // required bool error = 1;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->error(), target);
  }

  // required int32 code = 2;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->code(), target);
  }

  // optional uint64 transaction_id = 3;
  if (has_transaction_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->transaction_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Response)
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool error = 1;
    if (has_error()) {
      total_size += 1 + 1;
    }

    // required int32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

    // optional uint64 transaction_id = 3;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->transaction_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Response::Swap(Response* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(code_, other->code_);
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Operation_OperationType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_OperationType_descriptor_;
}
bool Operation_OperationType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Operation_OperationType Operation::INIT;
const Operation_OperationType Operation::TRANSACTION_BEGIN;
const Operation_OperationType Operation::TRANSACTION_END;
const Operation_OperationType Operation::TRANSACTION_NOTICE_ERROR;
const Operation_OperationType Operation::OperationType_MIN;
const Operation_OperationType Operation::OperationType_MAX;
const int Operation::OperationType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Operation_Init::kLicenseFieldNumber;
const int Operation_Init::kAppNameFieldNumber;
const int Operation_Init::kLanguageFieldNumber;
const int Operation_Init::kLanguageVersionFieldNumber;
#endif  // !_MSC_VER

Operation_Init::Operation_Init()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Operation.Init)
}

void Operation_Init::InitAsDefaultInstance() {
}

Operation_Init::Operation_Init(const Operation_Init& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Operation.Init)
}

void Operation_Init::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  license_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Operation_Init::~Operation_Init() {
  // @@protoc_insertion_point(destructor:operation_msg.Operation.Init)
  SharedDtor();
}

void Operation_Init::SharedDtor() {
  if (license_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete license_;
  }
  if (app_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete app_name_;
  }
  if (language_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete language_;
  }
  if (language_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete language_version_;
  }
  if (this != default_instance_) {
  }
}

void Operation_Init::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation_Init::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_Init_descriptor_;
}

const Operation_Init& Operation_Init::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Operation_Init* Operation_Init::default_instance_ = NULL;

Operation_Init* Operation_Init::New() const {
  return new Operation_Init;
}

void Operation_Init::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_license()) {
      if (license_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        license_->clear();
      }
    }
    if (has_app_name()) {
      if (app_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        app_name_->clear();
      }
    }
    if (has_language()) {
      if (language_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        language_->clear();
      }
    }
    if (has_language_version()) {
      if (language_version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        language_version_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Operation_Init::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Operation.Init)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string license = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_license()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->license().data(), this->license().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "license");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_app_name;
        break;
      }

      // required string app_name = 2;
      case 2: {
        if (tag == 18) {
         parse_app_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app_name().data(), this->app_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "app_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_language;
        break;
      }

      // required string language = 3;
      case 3: {
        if (tag == 26) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "language");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_language_version;
        break;
      }

      // required string language_version = 4;
      case 4: {
        if (tag == 34) {
         parse_language_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->language_version().data(), this->language_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "language_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Operation.Init)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Operation.Init)
  return false;
#undef DO_
}

void Operation_Init::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Operation.Init)
  // required string license = 1;
  if (has_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->license().data(), this->license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "license");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->license(), output);
  }

  // required string app_name = 2;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->app_name(), output);
  }

  // required string language = 3;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->language(), output);
  }

  // required string language_version = 4;
  if (has_language_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language_version().data(), this->language_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "language_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->language_version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Operation.Init)
}

::google::protobuf::uint8* Operation_Init::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Operation.Init)
  // required string license = 1;
  if (has_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->license().data(), this->license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "license");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->license(), target);
  }

  // required string app_name = 2;
  if (has_app_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app_name().data(), this->app_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->app_name(), target);
  }

  // required string language = 3;
  if (has_language()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->language(), target);
  }

  // required string language_version = 4;
  if (has_language_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->language_version().data(), this->language_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "language_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->language_version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Operation.Init)
  return target;
}

int Operation_Init::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string license = 1;
    if (has_license()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->license());
    }

    // required string app_name = 2;
    if (has_app_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app_name());
    }

    // required string language = 3;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language());
    }

    // required string language_version = 4;
    if (has_language_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->language_version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation_Init::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Operation_Init* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Operation_Init*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Operation_Init::MergeFrom(const Operation_Init& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_license()) {
      set_license(from.license());
    }
    if (from.has_app_name()) {
      set_app_name(from.app_name());
    }
    if (from.has_language()) {
      set_language(from.language());
    }
    if (from.has_language_version()) {
      set_language_version(from.language_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Operation_Init::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation_Init::CopyFrom(const Operation_Init& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation_Init::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void Operation_Init::Swap(Operation_Init* other) {
  if (other != this) {
    std::swap(license_, other->license_);
    std::swap(app_name_, other->app_name_);
    std::swap(language_, other->language_);
    std::swap(language_version_, other->language_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Operation_Init::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Operation_Init_descriptor_;
  metadata.reflection = Operation_Init_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Operation_TransactionBegin::kNameFieldNumber;
#endif  // !_MSC_VER

Operation_TransactionBegin::Operation_TransactionBegin()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Operation.TransactionBegin)
}

void Operation_TransactionBegin::InitAsDefaultInstance() {
}

Operation_TransactionBegin::Operation_TransactionBegin(const Operation_TransactionBegin& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Operation.TransactionBegin)
}

void Operation_TransactionBegin::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Operation_TransactionBegin::~Operation_TransactionBegin() {
  // @@protoc_insertion_point(destructor:operation_msg.Operation.TransactionBegin)
  SharedDtor();
}

void Operation_TransactionBegin::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Operation_TransactionBegin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation_TransactionBegin::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_TransactionBegin_descriptor_;
}

const Operation_TransactionBegin& Operation_TransactionBegin::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Operation_TransactionBegin* Operation_TransactionBegin::default_instance_ = NULL;

Operation_TransactionBegin* Operation_TransactionBegin::New() const {
  return new Operation_TransactionBegin;
}

void Operation_TransactionBegin::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Operation_TransactionBegin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Operation.TransactionBegin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Operation.TransactionBegin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Operation.TransactionBegin)
  return false;
#undef DO_
}

void Operation_TransactionBegin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Operation.TransactionBegin)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Operation.TransactionBegin)
}

::google::protobuf::uint8* Operation_TransactionBegin::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Operation.TransactionBegin)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Operation.TransactionBegin)
  return target;
}

int Operation_TransactionBegin::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation_TransactionBegin::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Operation_TransactionBegin* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Operation_TransactionBegin*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Operation_TransactionBegin::MergeFrom(const Operation_TransactionBegin& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Operation_TransactionBegin::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation_TransactionBegin::CopyFrom(const Operation_TransactionBegin& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation_TransactionBegin::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Operation_TransactionBegin::Swap(Operation_TransactionBegin* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Operation_TransactionBegin::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Operation_TransactionBegin_descriptor_;
  metadata.reflection = Operation_TransactionBegin_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Operation_TransactionEnd::kTransactionIdFieldNumber;
#endif  // !_MSC_VER

Operation_TransactionEnd::Operation_TransactionEnd()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Operation.TransactionEnd)
}

void Operation_TransactionEnd::InitAsDefaultInstance() {
}

Operation_TransactionEnd::Operation_TransactionEnd(const Operation_TransactionEnd& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Operation.TransactionEnd)
}

void Operation_TransactionEnd::SharedCtor() {
  _cached_size_ = 0;
  transaction_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Operation_TransactionEnd::~Operation_TransactionEnd() {
  // @@protoc_insertion_point(destructor:operation_msg.Operation.TransactionEnd)
  SharedDtor();
}

void Operation_TransactionEnd::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Operation_TransactionEnd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation_TransactionEnd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_TransactionEnd_descriptor_;
}

const Operation_TransactionEnd& Operation_TransactionEnd::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Operation_TransactionEnd* Operation_TransactionEnd::default_instance_ = NULL;

Operation_TransactionEnd* Operation_TransactionEnd::New() const {
  return new Operation_TransactionEnd;
}

void Operation_TransactionEnd::Clear() {
  transaction_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Operation_TransactionEnd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Operation.TransactionEnd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 transaction_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transaction_id_)));
          set_has_transaction_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Operation.TransactionEnd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Operation.TransactionEnd)
  return false;
#undef DO_
}

void Operation_TransactionEnd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Operation.TransactionEnd)
  // required uint64 transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->transaction_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Operation.TransactionEnd)
}

::google::protobuf::uint8* Operation_TransactionEnd::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Operation.TransactionEnd)
  // required uint64 transaction_id = 1;
  if (has_transaction_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->transaction_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Operation.TransactionEnd)
  return target;
}

int Operation_TransactionEnd::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 transaction_id = 1;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->transaction_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation_TransactionEnd::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Operation_TransactionEnd* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Operation_TransactionEnd*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Operation_TransactionEnd::MergeFrom(const Operation_TransactionEnd& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Operation_TransactionEnd::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation_TransactionEnd::CopyFrom(const Operation_TransactionEnd& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation_TransactionEnd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Operation_TransactionEnd::Swap(Operation_TransactionEnd* other) {
  if (other != this) {
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Operation_TransactionEnd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Operation_TransactionEnd_descriptor_;
  metadata.reflection = Operation_TransactionEnd_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Operation_NoticeError::kTransactionIdFieldNumber;
const int Operation_NoticeError::kExceptionTypeFieldNumber;
const int Operation_NoticeError::kErrorMessageFieldNumber;
const int Operation_NoticeError::kStackTraceFieldNumber;
const int Operation_NoticeError::kStackFrameDelimiterFieldNumber;
#endif  // !_MSC_VER

Operation_NoticeError::Operation_NoticeError()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Operation.NoticeError)
}

void Operation_NoticeError::InitAsDefaultInstance() {
}

Operation_NoticeError::Operation_NoticeError(const Operation_NoticeError& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Operation.NoticeError)
}

void Operation_NoticeError::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  transaction_id_ = GOOGLE_ULONGLONG(0);
  exception_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_trace_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stack_frame_delimiter_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Operation_NoticeError::~Operation_NoticeError() {
  // @@protoc_insertion_point(destructor:operation_msg.Operation.NoticeError)
  SharedDtor();
}

void Operation_NoticeError::SharedDtor() {
  if (exception_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete exception_type_;
  }
  if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_message_;
  }
  if (stack_trace_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stack_trace_;
  }
  if (stack_frame_delimiter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stack_frame_delimiter_;
  }
  if (this != default_instance_) {
  }
}

void Operation_NoticeError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation_NoticeError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_NoticeError_descriptor_;
}

const Operation_NoticeError& Operation_NoticeError::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Operation_NoticeError* Operation_NoticeError::default_instance_ = NULL;

Operation_NoticeError* Operation_NoticeError::New() const {
  return new Operation_NoticeError;
}

void Operation_NoticeError::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    transaction_id_ = GOOGLE_ULONGLONG(0);
    if (has_exception_type()) {
      if (exception_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        exception_type_->clear();
      }
    }
    if (has_error_message()) {
      if (error_message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        error_message_->clear();
      }
    }
    if (has_stack_trace()) {
      if (stack_trace_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stack_trace_->clear();
      }
    }
    if (has_stack_frame_delimiter()) {
      if (stack_frame_delimiter_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stack_frame_delimiter_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Operation_NoticeError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Operation.NoticeError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 transaction_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transaction_id_)));
          set_has_transaction_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_exception_type;
        break;
      }

      // required string exception_type = 2;
      case 2: {
        if (tag == 18) {
         parse_exception_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exception_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->exception_type().data(), this->exception_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "exception_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_message;
        break;
      }

      // required string error_message = 3;
      case 3: {
        if (tag == 26) {
         parse_error_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_message().data(), this->error_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "error_message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stack_trace;
        break;
      }

      // required string stack_trace = 4;
      case 4: {
        if (tag == 34) {
         parse_stack_trace:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stack_trace()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stack_trace().data(), this->stack_trace().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stack_trace");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_stack_frame_delimiter;
        break;
      }

      // required string stack_frame_delimiter = 5;
      case 5: {
        if (tag == 42) {
         parse_stack_frame_delimiter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stack_frame_delimiter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stack_frame_delimiter().data(), this->stack_frame_delimiter().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stack_frame_delimiter");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Operation.NoticeError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Operation.NoticeError)
  return false;
#undef DO_
}

void Operation_NoticeError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Operation.NoticeError)
  // required uint64 transaction_id = 1;
  if (has_transaction_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->transaction_id(), output);
  }

  // required string exception_type = 2;
  if (has_exception_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exception_type().data(), this->exception_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exception_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exception_type(), output);
  }

  // required string error_message = 3;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_message(), output);
  }

  // required string stack_trace = 4;
  if (has_stack_trace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stack_trace().data(), this->stack_trace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stack_trace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stack_trace(), output);
  }

  // required string stack_frame_delimiter = 5;
  if (has_stack_frame_delimiter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stack_frame_delimiter().data(), this->stack_frame_delimiter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stack_frame_delimiter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->stack_frame_delimiter(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Operation.NoticeError)
}

::google::protobuf::uint8* Operation_NoticeError::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Operation.NoticeError)
  // required uint64 transaction_id = 1;
  if (has_transaction_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->transaction_id(), target);
  }

  // required string exception_type = 2;
  if (has_exception_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->exception_type().data(), this->exception_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "exception_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exception_type(), target);
  }

  // required string error_message = 3;
  if (has_error_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_message().data(), this->error_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "error_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_message(), target);
  }

  // required string stack_trace = 4;
  if (has_stack_trace()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stack_trace().data(), this->stack_trace().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stack_trace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stack_trace(), target);
  }

  // required string stack_frame_delimiter = 5;
  if (has_stack_frame_delimiter()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stack_frame_delimiter().data(), this->stack_frame_delimiter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stack_frame_delimiter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->stack_frame_delimiter(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Operation.NoticeError)
  return target;
}

int Operation_NoticeError::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 transaction_id = 1;
    if (has_transaction_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->transaction_id());
    }

    // required string exception_type = 2;
    if (has_exception_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exception_type());
    }

    // required string error_message = 3;
    if (has_error_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_message());
    }

    // required string stack_trace = 4;
    if (has_stack_trace()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stack_trace());
    }

    // required string stack_frame_delimiter = 5;
    if (has_stack_frame_delimiter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stack_frame_delimiter());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation_NoticeError::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Operation_NoticeError* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Operation_NoticeError*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Operation_NoticeError::MergeFrom(const Operation_NoticeError& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transaction_id()) {
      set_transaction_id(from.transaction_id());
    }
    if (from.has_exception_type()) {
      set_exception_type(from.exception_type());
    }
    if (from.has_error_message()) {
      set_error_message(from.error_message());
    }
    if (from.has_stack_trace()) {
      set_stack_trace(from.stack_trace());
    }
    if (from.has_stack_frame_delimiter()) {
      set_stack_frame_delimiter(from.stack_frame_delimiter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Operation_NoticeError::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation_NoticeError::CopyFrom(const Operation_NoticeError& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation_NoticeError::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void Operation_NoticeError::Swap(Operation_NoticeError* other) {
  if (other != this) {
    std::swap(transaction_id_, other->transaction_id_);
    std::swap(exception_type_, other->exception_type_);
    std::swap(error_message_, other->error_message_);
    std::swap(stack_trace_, other->stack_trace_);
    std::swap(stack_frame_delimiter_, other->stack_frame_delimiter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Operation_NoticeError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Operation_NoticeError_descriptor_;
  metadata.reflection = Operation_NoticeError_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Operation::kTypeFieldNumber;
const int Operation::kInitFieldNumber;
const int Operation::kTransactionBeginFieldNumber;
const int Operation::kTransactionEndFieldNumber;
const int Operation::kNoticeErrorFieldNumber;
#endif  // !_MSC_VER

Operation::Operation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:operation_msg.Operation)
}

void Operation::InitAsDefaultInstance() {
  init_ = const_cast< ::operation_msg::Operation_Init*>(&::operation_msg::Operation_Init::default_instance());
  transaction_begin_ = const_cast< ::operation_msg::Operation_TransactionBegin*>(&::operation_msg::Operation_TransactionBegin::default_instance());
  transaction_end_ = const_cast< ::operation_msg::Operation_TransactionEnd*>(&::operation_msg::Operation_TransactionEnd::default_instance());
  notice_error_ = const_cast< ::operation_msg::Operation_NoticeError*>(&::operation_msg::Operation_NoticeError::default_instance());
}

Operation::Operation(const Operation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:operation_msg.Operation)
}

void Operation::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  init_ = NULL;
  transaction_begin_ = NULL;
  transaction_end_ = NULL;
  notice_error_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Operation::~Operation() {
  // @@protoc_insertion_point(destructor:operation_msg.Operation)
  SharedDtor();
}

void Operation::SharedDtor() {
  if (this != default_instance_) {
    delete init_;
    delete transaction_begin_;
    delete transaction_end_;
    delete notice_error_;
  }
}

void Operation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Operation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_descriptor_;
}

const Operation& Operation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_operation_5fmsg_2eproto();
  return *default_instance_;
}

Operation* Operation::default_instance_ = NULL;

Operation* Operation::New() const {
  return new Operation;
}

void Operation::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    type_ = 1;
    if (has_init()) {
      if (init_ != NULL) init_->::operation_msg::Operation_Init::Clear();
    }
    if (has_transaction_begin()) {
      if (transaction_begin_ != NULL) transaction_begin_->::operation_msg::Operation_TransactionBegin::Clear();
    }
    if (has_transaction_end()) {
      if (transaction_end_ != NULL) transaction_end_->::operation_msg::Operation_TransactionEnd::Clear();
    }
    if (has_notice_error()) {
      if (notice_error_ != NULL) notice_error_->::operation_msg::Operation_NoticeError::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Operation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:operation_msg.Operation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .operation_msg.Operation.OperationType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::operation_msg::Operation_OperationType_IsValid(value)) {
            set_type(static_cast< ::operation_msg::Operation_OperationType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_init;
        break;
      }

      // optional .operation_msg.Operation.Init init = 2;
      case 2: {
        if (tag == 18) {
         parse_init:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_transaction_begin;
        break;
      }

      // optional .operation_msg.Operation.TransactionBegin transaction_begin = 3;
      case 3: {
        if (tag == 26) {
         parse_transaction_begin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transaction_begin()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_transaction_end;
        break;
      }

      // optional .operation_msg.Operation.TransactionEnd transaction_end = 4;
      case 4: {
        if (tag == 34) {
         parse_transaction_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transaction_end()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_notice_error;
        break;
      }

      // optional .operation_msg.Operation.NoticeError notice_error = 5;
      case 5: {
        if (tag == 42) {
         parse_notice_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notice_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:operation_msg.Operation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:operation_msg.Operation)
  return false;
#undef DO_
}

void Operation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:operation_msg.Operation)
  // required .operation_msg.Operation.OperationType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .operation_msg.Operation.Init init = 2;
  if (has_init()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->init(), output);
  }

  // optional .operation_msg.Operation.TransactionBegin transaction_begin = 3;
  if (has_transaction_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->transaction_begin(), output);
  }

  // optional .operation_msg.Operation.TransactionEnd transaction_end = 4;
  if (has_transaction_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->transaction_end(), output);
  }

  // optional .operation_msg.Operation.NoticeError notice_error = 5;
  if (has_notice_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->notice_error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:operation_msg.Operation)
}

::google::protobuf::uint8* Operation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:operation_msg.Operation)
  // required .operation_msg.Operation.OperationType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .operation_msg.Operation.Init init = 2;
  if (has_init()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->init(), target);
  }

  // optional .operation_msg.Operation.TransactionBegin transaction_begin = 3;
  if (has_transaction_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->transaction_begin(), target);
  }

  // optional .operation_msg.Operation.TransactionEnd transaction_end = 4;
  if (has_transaction_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->transaction_end(), target);
  }

  // optional .operation_msg.Operation.NoticeError notice_error = 5;
  if (has_notice_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->notice_error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operation_msg.Operation)
  return target;
}

int Operation::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .operation_msg.Operation.OperationType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .operation_msg.Operation.Init init = 2;
    if (has_init()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->init());
    }

    // optional .operation_msg.Operation.TransactionBegin transaction_begin = 3;
    if (has_transaction_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction_begin());
    }

    // optional .operation_msg.Operation.TransactionEnd transaction_end = 4;
    if (has_transaction_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transaction_end());
    }

    // optional .operation_msg.Operation.NoticeError notice_error = 5;
    if (has_notice_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notice_error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Operation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Operation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Operation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Operation::MergeFrom(const Operation& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_init()) {
      mutable_init()->::operation_msg::Operation_Init::MergeFrom(from.init());
    }
    if (from.has_transaction_begin()) {
      mutable_transaction_begin()->::operation_msg::Operation_TransactionBegin::MergeFrom(from.transaction_begin());
    }
    if (from.has_transaction_end()) {
      mutable_transaction_end()->::operation_msg::Operation_TransactionEnd::MergeFrom(from.transaction_end());
    }
    if (from.has_notice_error()) {
      mutable_notice_error()->::operation_msg::Operation_NoticeError::MergeFrom(from.notice_error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Operation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Operation::CopyFrom(const Operation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Operation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_init()) {
    if (!this->init().IsInitialized()) return false;
  }
  if (has_transaction_begin()) {
    if (!this->transaction_begin().IsInitialized()) return false;
  }
  if (has_transaction_end()) {
    if (!this->transaction_end().IsInitialized()) return false;
  }
  if (has_notice_error()) {
    if (!this->notice_error().IsInitialized()) return false;
  }
  return true;
}

void Operation::Swap(Operation* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(init_, other->init_);
    std::swap(transaction_begin_, other->transaction_begin_);
    std::swap(transaction_end_, other->transaction_end_);
    std::swap(notice_error_, other->notice_error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Operation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Operation_descriptor_;
  metadata.reflection = Operation_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace operation_msg

// @@protoc_insertion_point(global_scope)
